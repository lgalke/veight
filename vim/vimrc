set nocompatible
runtime core/vim-pathogen/autoload/pathogen.vim
execute pathogen#infect('core/{}', 'extra/{}')
syntax on
filetype plugin indent on


set autowrite
set foldmethod=marker
set showtabline=2
set guioptions-=e "recommended by flagship

if has('conceal')
  set conceallevel=2 concealcursor=niv
endif

let mapleader = ","
let maplocalleader = "\\"

nnoremap Ã¤ :
inoremap <C-C> <Esc>`^
vnoremap <Space> I<Space><Esc>gv
nnoremap <Space> za

" Core {{{
let g:markdown_fenced_languages = ['html', 'python', 'bash=sh']
let g:ragtag_global_maps = 1
" }}}
" Extra {{{
nnoremap <leader>m :Make<cr>
nnoremap <leader>d :Dispatch<cr>
" CtrlP {{{
let g:ctrlp_map = '<leader>,'
nnoremap <leader>. :CtrlPTag<cr>
nnoremap <leader>b :CtrlPBuffer<cr>
let g:ctrlp_extensions = ['tag']
" }}}
" Flagship {{{

" }}}
" Vimtex {{{
let g:vimtex_latexmk_continuous = 0
let g:vimtex_latexmk_background = 1
let g:vimtex_latexmk_callback = 0

" let g:vimtex_imaps_leader = '`'

let g:vimtex_view_general_viewer = 'okular'
let g:vimtex_view_general_options = '--unique @pdf\#src:@line@tex'
let g:vimtex_view_general_options_latexmk = '--unique'

let g:vimtex_fold_enabled = 1
let g:vimtex_fold_preamble = 1
let g:vimtex_fold_comments = 1
let g:vimtex_indent_enabled = 1
let g:vimtex_indent_bib_enabled = 1
let g:vimtex_format_enabled = 1 " this did not work well, recheck if fixed
augroup vimtex_mappings
  au!
  au User VimtexEventInitPost nmap <F3> <plug>(vimtex-toc-toggle)
augroup END
" }}}
" }}}
